timediff = timediff-24
}
if(timediff<(-12)){
timediff = timediff+24
}
return(timediff)
}
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
datediff = as.numeric(difftime(d1,d2))
while(datediff<-365/2){
datediff = datediff + 365
}
return(datediff)
}
h_distance = function(point, data){
distances =
return()
}
h_date = function(){
}
h_time = function(){
}
# Implementation
lat = 58.4274
long = 14.826
point = c(lat, long)
date = "2013-01-04"
data.filtered = get_filtered_data(dateframe)
points = matrix(c(data.filtered$latitude, data.filtered$longitude), nrow=dim(data.filtered[1]), ncol=2)
distances = get_distance(points, point)
# Appendix 1
################
# Assignment 1 #
################
# Libraries
library(geosphere)
# Setup
set.seed(12345)
stations.dataframe = read.csv("stations.csv", fileEncoding="latin1")
temps.dataframe = read.csv("temps50k.csv", fileEncoding="latin1")
dataframe = merge(stations.dataframe, temps.dataframe, by="station_number")
times = c("04:00:00","06:00:00","08:00:00","10:00:00","12:00:00","14:00:00",
"16:00:00","18:00:00","20:00:00","22:00:00","24:00:00")
temp = numeric(length(times))
# Functions
# Returns the data excluding those with dates after given date
get_filtered_data = function(date){
dates.valid = as.Date(data$date)<as.Date(date)
return(data[dates.valid,])
}
get_distance = function(p1,p2){
return(distHaversine(p1,p2))
}
get_time_difference = function(t1, t2){
t1 = strptime(t1, format="%H:")
t2 = strptime(t2, format="%H:")
timediff = as.numeric(difftime(t1,t2))
if(timediff>12){
timediff = timediff-24
}
if(timediff<(-12)){
timediff = timediff+24
}
return(timediff)
}
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
datediff = as.numeric(difftime(d1,d2))
while(datediff<-365/2){
datediff = datediff + 365
}
return(datediff)
}
h_distance = function(point, data){
distances =
return()
}
h_date = function(){
}
h_time = function(){
}
# Implementation
lat = 58.4274
long = 14.826
point = c(lat, long)
date = "2013-01-04"
data.filtered = get_filtered_data(dataframe)
points = matrix(c(data.filtered$latitude, data.filtered$longitude), nrow=dim(data.filtered[1]), ncol=2)
distances = get_distance(points, point)
# Appendix 1
################
# Assignment 1 #
################
# Libraries
library(geosphere)
# Setup
set.seed(12345)
stations.dataframe = read.csv("stations.csv", fileEncoding="latin1")
temps.dataframe = read.csv("temps50k.csv", fileEncoding="latin1")
dataframe = merge(stations.dataframe, temps.dataframe, by="station_number")
times = c("04:00:00","06:00:00","08:00:00","10:00:00","12:00:00","14:00:00",
"16:00:00","18:00:00","20:00:00","22:00:00","24:00:00")
temp = numeric(length(times))
# Functions
# Returns the data excluding those with dates after given date
get_filtered_data = function(date){
dates.valid = as.Date(dataframe$date)<as.Date(date)
return(data[dates.valid,])
}
get_distance = function(p1,p2){
return(distHaversine(p1,p2))
}
get_time_difference = function(t1, t2){
t1 = strptime(t1, format="%H:")
t2 = strptime(t2, format="%H:")
timediff = as.numeric(difftime(t1,t2))
if(timediff>12){
timediff = timediff-24
}
if(timediff<(-12)){
timediff = timediff+24
}
return(timediff)
}
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
datediff = as.numeric(difftime(d1,d2))
while(datediff<-365/2){
datediff = datediff + 365
}
return(datediff)
}
h_distance = function(point, data){
distances =
return()
}
h_date = function(){
}
h_time = function(){
}
# Implementation
lat = 58.4274
long = 14.826
point = c(lat, long)
date = "2013-01-04"
data.filtered = get_filtered_data(date)
points = matrix(c(data.filtered$latitude, data.filtered$longitude), nrow=dim(data.filtered[1]), ncol=2)
distances = get_distance(points, point)
# Appendix 1
################
# Assignment 1 #
################
# Libraries
library(geosphere)
# Setup
set.seed(12345)
stations.dataframe = read.csv("stations.csv", fileEncoding="latin1")
temps.dataframe = read.csv("temps50k.csv", fileEncoding="latin1")
dataframe = merge(stations.dataframe, temps.dataframe, by="station_number")
times = c("04:00:00","06:00:00","08:00:00","10:00:00","12:00:00","14:00:00",
"16:00:00","18:00:00","20:00:00","22:00:00","24:00:00")
temp = numeric(length(times))
# Functions
# Returns the data excluding those with dates after given date
get_filtered_data = function(date){
dates.valid = as.Date(dataframe$date)<as.Date(date)
return(dataframe[dates.valid,])
}
get_distance = function(p1,p2){
return(distHaversine(p1,p2))
}
get_time_difference = function(t1, t2){
t1 = strptime(t1, format="%H:")
t2 = strptime(t2, format="%H:")
timediff = as.numeric(difftime(t1,t2))
if(timediff>12){
timediff = timediff-24
}
if(timediff<(-12)){
timediff = timediff+24
}
return(timediff)
}
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
datediff = as.numeric(difftime(d1,d2))
while(datediff<-365/2){
datediff = datediff + 365
}
return(datediff)
}
h_distance = function(point, data){
distances =
return()
}
h_date = function(){
}
h_time = function(){
}
# Implementation
lat = 58.4274
long = 14.826
point = c(lat, long)
date = "2013-01-04"
data.filtered = get_filtered_data(date)
points = matrix(c(data.filtered$latitude, data.filtered$longitude), nrow=dim(data.filtered[1]), ncol=2)
distances = get_distance(points, point)
help(density)
h_distance = function(point, data){
points = matrix(c(data$latitude, data$longitude), nrow=dim(data[1]), ncol=2)
distances = get_distance(point, points)
return(density(distances, kernel="gaussian"))
}
plot(h_distance(point, data.filtered))
help(density)
plot(h_distance(point, data.filtered))
h_date = function(date, data){
days = get_date_difference(date, data$date)
return(density(days, kernel="gaussian"))
}
plot(h_date(date, data.filtered))
get_date_difference(date, data.filtered$date[1])
get_date_difference(date, data.filtered$date[1])
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
datediff = as.numeric(difftime(d1,d2))
while(datediff<(-365/2)){
datediff = datediff + 365
}
return(datediff)
}
plot(h_date(date, data.filtered))
365/2
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
datediff = as.numeric(difftime(d1,d2))
while(datediff<(-182)){
datediff = datediff + 365
}
return(datediff)
}
plot(h_date(date, data.filtered))
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
datediff = as.numeric(difftime(d1,d2))
while(-182>datediff)){
datediff = datediff + 365
}
return(datediff)
}
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
datediff = as.numeric(difftime(d1,d2))
while(-182>datediff){
datediff = datediff + 365
}
return(datediff)
}
plot(h_date(date, data.filtered))
get_date_difference(date, data.filtered$date[1])
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
datediff = as.numeric(difftime(d1,d2))
while(abs(datediff)>183){
datediff = datediff + 365
}
return(datediff)
}
plot(h_date(date, data.filtered))
get_date_difference(data.filtered$date[1], date)
plot(h_date(date, data.filtered))
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
datediff = as.numeric(difftime(d1,d2))
while(abs(datediff)>184){
datediff = datediff + 365
}
return(datediff)
}
get_date_difference(data.filtered$date[1], date)
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
datediff = as.numeric(difftime(d1,d2))
while(abs(datediff)>184){
datediff = datediff + 365
}
return(datediff)
}
h_date = function(date, data){
days = get_date_difference(data$date, date)
return(density(days, kernel="gaussian"))
}
plot(h_date(date, data.filtered))
get_date_difference(data.filtered$date[1], date)
date = "2099-01-04"
get_date_difference(data.filtered$date[1], date)
days = get_date_difference(data.filtered$date, date)
days
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
datediff = as.numeric(difftime(d1,d2))
datediff = datediff %% 365
if(datediff<(-365/2)){
datediff = datediff + 365
}
return(datediff)
}
h_date = function(date, data){
days = get_date_difference(data$date, date)
return(density(days, kernel="gaussian"))
}
plot(h_date(date, data.filtered))
days = get_date_difference(data.filtered$date, date)
days
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
datediff = as.numeric(difftime(d1,d2))
datediff = datediff %% 365
return(datediff)
}
plot(h_date(date, data.filtered))
days = get_date_difference(data.filtered$date, date)
days
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
datediff = as.numeric(difftime(d1,d2))
datediff = datediff %% 365
if(datediff>365/2){
datediff = datediff-365
}
return(datediff)
}
plot(h_date(date, data.filtered))
days = get_date_difference(data.filtered$date, date)
days
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
datediff = as.numeric(difftime(d1,d2))
datediff = datediff %% 365
if(datediff>(365/2)){
datediff = datediff-365
}
return(datediff)
}
plot(h_date(date, data.filtered))
days = get_date_difference(data.filtered$date, date)
days
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
datediff = as.numeric(difftime(d1,d2))
datediff = datediff %% 365
if(datediff>(183)){
datediff = datediff-365
}
return(datediff)
}
plot(h_date(date, data.filtered))
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
datediff = as.numeric(difftime(d1,d2))
datediff = datediff %% 365
if(datediff.value>(183)){
datediff = datediff-365
}
return(datediff)
}
plot(h_date(date, data.filtered))
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
datediff = as.numeric(difftime(d1,d2))
datediff = datediff %% 365
if(datediff>183){
datediff = datediff-365
}
return(datediff)
}
plot(h_date(date, data.filtered))
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
date.diff = as.numeric(difftime(d1,d2))
date.diff = date.diff %% 365
typeof(date.diff)
return(date.diff)
}
days = get_date_difference(data.filtered$date[1], date)
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
date.diff = as.numeric(difftime(d1,d2))
date.diff = date.diff %% 365
if(date.diff>183){
date.diff = date.diff - 365
}
return(date.diff)
}
plot(h_date(date, data.filtered))
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
date.diff = as.numeric(difftime(d1,d2))
date.diff = date.diff %% 365
date.diff - 365
return(date.diff)
}
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
date.diff = as.numeric(difftime(d1,d2))
date.diff = date.diff %% 365
date.diff = date.diff - 365
return(date.diff)
}
plot(h_date(date, data.filtered))
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
date.diff = as.numeric(difftime(d1,d2))
date.diff = date.diff %% 365
ifelse(date.diff>183, date.diff=date.diff-385,)
return(date.diff)
}
plot(h_date(date, data.filtered))
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
date.diff = as.numeric(difftime(d1,d2))
date.diff = date.diff %% 365
ifelse(date.diff>183, date.diff=date.diff-365, date.diff)
return(date.diff)
}
plot(h_date(date, data.filtered))
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
date.diff = as.numeric(difftime(d1,d2))
date.diff = date.diff %% 365
ifelse(date.diff>183, date.diff=65, date.diff)
return(date.diff)
}
plot(h_date(date, data.filtered))
get_date_difference = function(d1, d2){
d1 = as.Date(d1)
d2 = as.Date(d2)
date.diff = as.numeric(difftime(d1,d2))
date.diff = date.diff %% 365
date.diff[which(date.diff>183)]=date.diff[which(date.diff>183)]-365
return(date.diff)
}
plot(h_date(date, data.filtered))
date = "2099-12-04"
plot(h_date(date, data.filtered))
date = "2099-8-04"
date = "2099-08-04"
plot(h_date(date, data.filtered))
h_distance = function(point, data){
points = matrix(c(data$latitude, data$longitude), nrow=dim(data[1]), ncol=2)
distances = get_distance(point, points)
return(density(distances[1], kernel="gaussian"))
}
plot(h_date(date, data.filtered))
plot(h_distance(point, data.filtered))
h_distance = function(point, data){
points = matrix(c(data$latitude, data$longitude), nrow=dim(data[1]), ncol=2)
distances = get_distance(point, points)
return(density(distances, kernel="gaussian"))
}
get_time_difference = function(time, times){
time = strptime(time, format="%H:")
times = strptime(times, format="%H:")
time.diff = as.numeric(difftime(time,times))
time.diff[which(time.diff>12)]=time.diff[which(time.diff>12)]-24
time.diff[which(time.diff<(-12))]=time.diff[which(time.diff<(-12))]+24
return(timediff)
}
get_date_difference = function(date, dates){
date = as.Date(date)
dates = as.Date(dates)
date.diff = as.numeric(difftime(date,dates))
date.diff = date.diff %% 365
date.diff[which(date.diff<(-183))]=date.diff[which(date.diff>183)]+365
return(date.diff)
}
plot(h_distance(point, data.filtered))
plot(h_date(date, data.filtered))
get_time_difference = function(time, times){
time = strptime(time, format="%H:")
times = strptime(times, format="%H:")
time.diff = as.numeric(difftime(time,times))
time.diff[which(time.diff>12)]=time.diff[which(time.diff>12)]-24
time.diff[which(time.diff<(-12))]=time.diff[which(time.diff<(-12))]+24
return(timediff)
}
